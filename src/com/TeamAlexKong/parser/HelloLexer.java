// Generated from Hello.g4 by ANTLR 4.7
package com.TeamAlexKong.parser;
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class HelloLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.7", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		T__0=1, T__1=2, T__2=3, T__3=4, T__4=5, T__5=6, T__6=7, T__7=8, T__8=9, 
		T__9=10, T__10=11, T__11=12, T__12=13, T__13=14, T__14=15, T__15=16, T__16=17, 
		T__17=18, T__18=19, T__19=20, T__20=21, T__21=22, T__22=23, T__23=24, 
		T__24=25, T__25=26, T__26=27, T__27=28, T__28=29, T__29=30, T__30=31, 
		T__31=32, T__32=33, T__33=34, T__34=35, T__35=36, T__36=37, T__37=38, 
		T__38=39, T__39=40, T__40=41, T__41=42, T__42=43, T__43=44, T__44=45, 
		T__45=46, T__46=47, T__47=48, T__48=49, T__49=50, T__50=51, T__51=52, 
		T__52=53, T__53=54, T__54=55, T__55=56, T__56=57, T__57=58, T__58=59, 
		T__59=60, T__60=61, T__61=62, T__62=63, T__63=64, T__64=65, T__65=66, 
		T__66=67, T__67=68, T__68=69, T__69=70, T__70=71, T__71=72, T__72=73, 
		DecimalLiteral=74, FloatingPointLiteral=75, CharacterLiteral=76, StringLiteral=77, 
		ENUM=78, Identifier=79, COMMENT=80, WS=81, LINE_COMMENT=82;
	public static String[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	public static final String[] ruleNames = {
		"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8", 
		"T__9", "T__10", "T__11", "T__12", "T__13", "T__14", "T__15", "T__16", 
		"T__17", "T__18", "T__19", "T__20", "T__21", "T__22", "T__23", "T__24", 
		"T__25", "T__26", "T__27", "T__28", "T__29", "T__30", "T__31", "T__32", 
		"T__33", "T__34", "T__35", "T__36", "T__37", "T__38", "T__39", "T__40", 
		"T__41", "T__42", "T__43", "T__44", "T__45", "T__46", "T__47", "T__48", 
		"T__49", "T__50", "T__51", "T__52", "T__53", "T__54", "T__55", "T__56", 
		"T__57", "T__58", "T__59", "T__60", "T__61", "T__62", "T__63", "T__64", 
		"T__65", "T__66", "T__67", "T__68", "T__69", "T__70", "T__71", "T__72", 
		"DecimalLiteral", "IntegerTypeSuffix", "FloatingPointLiteral", "Exponent", 
		"FloatTypeSuffix", "CharacterLiteral", "StringLiteral", "EscapeSequence", 
		"ENUM", "Identifier", "Letter", "COMMENT", "WS", "LINE_COMMENT"
	};

	private static final String[] _LITERAL_NAMES = {
		null, "'package'", "';'", "'import'", "'static'", "'.'", "'*'", "'class'", 
		"'extends'", "':'", "'<'", "','", "'>'", "'&'", "'{'", "'}'", "'fun'", 
		"'throws'", "'var'", "'init'", "'='", "'['", "']'", "'public'", "'protected'", 
		"'private'", "'abstract'", "'final'", "'Bool'", "'Char'", "'Byte'", "'Short'", 
		"'Int'", "'Long'", "'Float'", "'Double'", "'let'", "'?'", "'super'", "'('", 
		"')'", "'...'", "'this'", "'null'", "'true'", "'false'", "'if'", "'else'", 
		"'for'", "'while'", "'do'", "'when'", "'return'", "'break'", "'->'", "'in'", 
		"'self'", "'new'", "'++'", "'--'", "'+'", "'-'", "'~'", "'!'", "'/'", 
		"'%'", "'instanceof'", "'=='", "'!='", "'^'", "'|'", "'&&'", "'||'", "'void'", 
		null, null, null, null, "'enum'"
	};
	private static final String[] _SYMBOLIC_NAMES = {
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, "DecimalLiteral", "FloatingPointLiteral", "CharacterLiteral", 
		"StringLiteral", "ENUM", "Identifier", "COMMENT", "WS", "LINE_COMMENT"
	};
	public static final Vocabulary VOCABULARY = new VocabularyImpl(_LITERAL_NAMES, _SYMBOLIC_NAMES);

	/**
	 * @deprecated Use {@link #VOCABULARY} instead.
	 */
	@Deprecated
	public static final String[] tokenNames;
	static {
		tokenNames = new String[_SYMBOLIC_NAMES.length];
		for (int i = 0; i < tokenNames.length; i++) {
			tokenNames[i] = VOCABULARY.getLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = VOCABULARY.getSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}
	}

	@Override
	@Deprecated
	public String[] getTokenNames() {
		return tokenNames;
	}

	@Override

	public Vocabulary getVocabulary() {
		return VOCABULARY;
	}


	  protected boolean enumIsKeyword = true;
	  protected boolean assertIsKeyword = true;


	public HelloLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "Hello.g4"; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getChannelNames() { return channelNames; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	@Override
	public void action(RuleContext _localctx, int ruleIndex, int actionIndex) {
		switch (ruleIndex) {
		case 81:
			ENUM_action((RuleContext)_localctx, actionIndex);
			break;
		}
	}
	private void ENUM_action(RuleContext _localctx, int actionIndex) {
		switch (actionIndex) {
		case 0:
			if (!enumIsKeyword) setType(Identifier);
			break;
		}
	}

	public static final String _serializedATN =
		"\3\u608b\ua72a\u8133\ub9ed\u417c\u3be7\u7786\u5964\2T\u027c\b\1\4\2\t"+
		"\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13"+
		"\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22"+
		"\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30\4\31\t\31"+
		"\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36\t\36\4\37\t\37\4 \t \4!"+
		"\t!\4\"\t\"\4#\t#\4$\t$\4%\t%\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t+\4"+
		",\t,\4-\t-\4.\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63\t\63\4\64\t"+
		"\64\4\65\t\65\4\66\t\66\4\67\t\67\48\t8\49\t9\4:\t:\4;\t;\4<\t<\4=\t="+
		"\4>\t>\4?\t?\4@\t@\4A\tA\4B\tB\4C\tC\4D\tD\4E\tE\4F\tF\4G\tG\4H\tH\4I"+
		"\tI\4J\tJ\4K\tK\4L\tL\4M\tM\4N\tN\4O\tO\4P\tP\4Q\tQ\4R\tR\4S\tS\4T\tT"+
		"\4U\tU\4V\tV\4W\tW\4X\tX\3\2\3\2\3\2\3\2\3\2\3\2\3\2\3\2\3\3\3\3\3\4\3"+
		"\4\3\4\3\4\3\4\3\4\3\4\3\5\3\5\3\5\3\5\3\5\3\5\3\5\3\6\3\6\3\7\3\7\3\b"+
		"\3\b\3\b\3\b\3\b\3\b\3\t\3\t\3\t\3\t\3\t\3\t\3\t\3\t\3\n\3\n\3\13\3\13"+
		"\3\f\3\f\3\r\3\r\3\16\3\16\3\17\3\17\3\20\3\20\3\21\3\21\3\21\3\21\3\22"+
		"\3\22\3\22\3\22\3\22\3\22\3\22\3\23\3\23\3\23\3\23\3\24\3\24\3\24\3\24"+
		"\3\24\3\25\3\25\3\26\3\26\3\27\3\27\3\30\3\30\3\30\3\30\3\30\3\30\3\30"+
		"\3\31\3\31\3\31\3\31\3\31\3\31\3\31\3\31\3\31\3\31\3\32\3\32\3\32\3\32"+
		"\3\32\3\32\3\32\3\32\3\33\3\33\3\33\3\33\3\33\3\33\3\33\3\33\3\33\3\34"+
		"\3\34\3\34\3\34\3\34\3\34\3\35\3\35\3\35\3\35\3\35\3\36\3\36\3\36\3\36"+
		"\3\36\3\37\3\37\3\37\3\37\3\37\3 \3 \3 \3 \3 \3 \3!\3!\3!\3!\3\"\3\"\3"+
		"\"\3\"\3\"\3#\3#\3#\3#\3#\3#\3$\3$\3$\3$\3$\3$\3$\3%\3%\3%\3%\3&\3&\3"+
		"\'\3\'\3\'\3\'\3\'\3\'\3(\3(\3)\3)\3*\3*\3*\3*\3+\3+\3+\3+\3+\3,\3,\3"+
		",\3,\3,\3-\3-\3-\3-\3-\3.\3.\3.\3.\3.\3.\3/\3/\3/\3\60\3\60\3\60\3\60"+
		"\3\60\3\61\3\61\3\61\3\61\3\62\3\62\3\62\3\62\3\62\3\62\3\63\3\63\3\63"+
		"\3\64\3\64\3\64\3\64\3\64\3\65\3\65\3\65\3\65\3\65\3\65\3\65\3\66\3\66"+
		"\3\66\3\66\3\66\3\66\3\67\3\67\3\67\38\38\38\39\39\39\39\39\3:\3:\3:\3"+
		":\3;\3;\3;\3<\3<\3<\3=\3=\3>\3>\3?\3?\3@\3@\3A\3A\3B\3B\3C\3C\3C\3C\3"+
		"C\3C\3C\3C\3C\3C\3C\3D\3D\3D\3E\3E\3E\3F\3F\3G\3G\3H\3H\3H\3I\3I\3I\3"+
		"J\3J\3J\3J\3J\3K\3K\3K\7K\u01eb\nK\fK\16K\u01ee\13K\5K\u01f0\nK\3K\5K"+
		"\u01f3\nK\3L\3L\3M\6M\u01f8\nM\rM\16M\u01f9\3M\3M\7M\u01fe\nM\fM\16M\u0201"+
		"\13M\3M\5M\u0204\nM\3M\5M\u0207\nM\3M\3M\6M\u020b\nM\rM\16M\u020c\3M\5"+
		"M\u0210\nM\3M\5M\u0213\nM\3M\6M\u0216\nM\rM\16M\u0217\3M\3M\5M\u021c\n"+
		"M\3M\6M\u021f\nM\rM\16M\u0220\3M\5M\u0224\nM\3N\3N\5N\u0228\nN\3N\6N\u022b"+
		"\nN\rN\16N\u022c\3O\3O\3P\3P\3P\5P\u0234\nP\3P\3P\3Q\3Q\3Q\7Q\u023b\n"+
		"Q\fQ\16Q\u023e\13Q\3Q\3Q\3R\3R\3R\3R\5R\u0246\nR\3S\3S\3S\3S\3S\3S\3S"+
		"\3T\3T\7T\u0251\nT\fT\16T\u0254\13T\3U\3U\3V\3V\3V\3V\7V\u025c\nV\fV\16"+
		"V\u025f\13V\3V\3V\3V\3V\3V\3W\6W\u0267\nW\rW\16W\u0268\3W\3W\3X\3X\3X"+
		"\3X\7X\u0271\nX\fX\16X\u0274\13X\3X\5X\u0277\nX\3X\3X\3X\3X\3\u025d\2"+
		"Y\3\3\5\4\7\5\t\6\13\7\r\b\17\t\21\n\23\13\25\f\27\r\31\16\33\17\35\20"+
		"\37\21!\22#\23%\24\'\25)\26+\27-\30/\31\61\32\63\33\65\34\67\359\36;\37"+
		"= ?!A\"C#E$G%I&K\'M(O)Q*S+U,W-Y.[/]\60_\61a\62c\63e\64g\65i\66k\67m8o"+
		"9q:s;u<w=y>{?}@\177A\u0081B\u0083C\u0085D\u0087E\u0089F\u008bG\u008dH"+
		"\u008fI\u0091J\u0093K\u0095L\u0097\2\u0099M\u009b\2\u009d\2\u009fN\u00a1"+
		"O\u00a3\2\u00a5P\u00a7Q\u00a9\2\u00abR\u00adS\u00afT\3\2\f\4\2NNnn\4\2"+
		"GGgg\4\2--//\6\2FFHHffhh\4\2))^^\4\2$$^^\7\2ddhhppttvv\16\2&&C\\aac|\u00c2"+
		"\u00d8\u00da\u00f8\u00fa\u2001\u3042\u3191\u3302\u3381\u3402\u3d2f\u4e02"+
		"\ua001\uf902\ufb01\5\2\13\f\16\17\"\"\4\2\f\f\17\17\2\u0291\2\3\3\2\2"+
		"\2\2\5\3\2\2\2\2\7\3\2\2\2\2\t\3\2\2\2\2\13\3\2\2\2\2\r\3\2\2\2\2\17\3"+
		"\2\2\2\2\21\3\2\2\2\2\23\3\2\2\2\2\25\3\2\2\2\2\27\3\2\2\2\2\31\3\2\2"+
		"\2\2\33\3\2\2\2\2\35\3\2\2\2\2\37\3\2\2\2\2!\3\2\2\2\2#\3\2\2\2\2%\3\2"+
		"\2\2\2\'\3\2\2\2\2)\3\2\2\2\2+\3\2\2\2\2-\3\2\2\2\2/\3\2\2\2\2\61\3\2"+
		"\2\2\2\63\3\2\2\2\2\65\3\2\2\2\2\67\3\2\2\2\29\3\2\2\2\2;\3\2\2\2\2=\3"+
		"\2\2\2\2?\3\2\2\2\2A\3\2\2\2\2C\3\2\2\2\2E\3\2\2\2\2G\3\2\2\2\2I\3\2\2"+
		"\2\2K\3\2\2\2\2M\3\2\2\2\2O\3\2\2\2\2Q\3\2\2\2\2S\3\2\2\2\2U\3\2\2\2\2"+
		"W\3\2\2\2\2Y\3\2\2\2\2[\3\2\2\2\2]\3\2\2\2\2_\3\2\2\2\2a\3\2\2\2\2c\3"+
		"\2\2\2\2e\3\2\2\2\2g\3\2\2\2\2i\3\2\2\2\2k\3\2\2\2\2m\3\2\2\2\2o\3\2\2"+
		"\2\2q\3\2\2\2\2s\3\2\2\2\2u\3\2\2\2\2w\3\2\2\2\2y\3\2\2\2\2{\3\2\2\2\2"+
		"}\3\2\2\2\2\177\3\2\2\2\2\u0081\3\2\2\2\2\u0083\3\2\2\2\2\u0085\3\2\2"+
		"\2\2\u0087\3\2\2\2\2\u0089\3\2\2\2\2\u008b\3\2\2\2\2\u008d\3\2\2\2\2\u008f"+
		"\3\2\2\2\2\u0091\3\2\2\2\2\u0093\3\2\2\2\2\u0095\3\2\2\2\2\u0099\3\2\2"+
		"\2\2\u009f\3\2\2\2\2\u00a1\3\2\2\2\2\u00a5\3\2\2\2\2\u00a7\3\2\2\2\2\u00ab"+
		"\3\2\2\2\2\u00ad\3\2\2\2\2\u00af\3\2\2\2\3\u00b1\3\2\2\2\5\u00b9\3\2\2"+
		"\2\7\u00bb\3\2\2\2\t\u00c2\3\2\2\2\13\u00c9\3\2\2\2\r\u00cb\3\2\2\2\17"+
		"\u00cd\3\2\2\2\21\u00d3\3\2\2\2\23\u00db\3\2\2\2\25\u00dd\3\2\2\2\27\u00df"+
		"\3\2\2\2\31\u00e1\3\2\2\2\33\u00e3\3\2\2\2\35\u00e5\3\2\2\2\37\u00e7\3"+
		"\2\2\2!\u00e9\3\2\2\2#\u00ed\3\2\2\2%\u00f4\3\2\2\2\'\u00f8\3\2\2\2)\u00fd"+
		"\3\2\2\2+\u00ff\3\2\2\2-\u0101\3\2\2\2/\u0103\3\2\2\2\61\u010a\3\2\2\2"+
		"\63\u0114\3\2\2\2\65\u011c\3\2\2\2\67\u0125\3\2\2\29\u012b\3\2\2\2;\u0130"+
		"\3\2\2\2=\u0135\3\2\2\2?\u013a\3\2\2\2A\u0140\3\2\2\2C\u0144\3\2\2\2E"+
		"\u0149\3\2\2\2G\u014f\3\2\2\2I\u0156\3\2\2\2K\u015a\3\2\2\2M\u015c\3\2"+
		"\2\2O\u0162\3\2\2\2Q\u0164\3\2\2\2S\u0166\3\2\2\2U\u016a\3\2\2\2W\u016f"+
		"\3\2\2\2Y\u0174\3\2\2\2[\u0179\3\2\2\2]\u017f\3\2\2\2_\u0182\3\2\2\2a"+
		"\u0187\3\2\2\2c\u018b\3\2\2\2e\u0191\3\2\2\2g\u0194\3\2\2\2i\u0199\3\2"+
		"\2\2k\u01a0\3\2\2\2m\u01a6\3\2\2\2o\u01a9\3\2\2\2q\u01ac\3\2\2\2s\u01b1"+
		"\3\2\2\2u\u01b5\3\2\2\2w\u01b8\3\2\2\2y\u01bb\3\2\2\2{\u01bd\3\2\2\2}"+
		"\u01bf\3\2\2\2\177\u01c1\3\2\2\2\u0081\u01c3\3\2\2\2\u0083\u01c5\3\2\2"+
		"\2\u0085\u01c7\3\2\2\2\u0087\u01d2\3\2\2\2\u0089\u01d5\3\2\2\2\u008b\u01d8"+
		"\3\2\2\2\u008d\u01da\3\2\2\2\u008f\u01dc\3\2\2\2\u0091\u01df\3\2\2\2\u0093"+
		"\u01e2\3\2\2\2\u0095\u01ef\3\2\2\2\u0097\u01f4\3\2\2\2\u0099\u0223\3\2"+
		"\2\2\u009b\u0225\3\2\2\2\u009d\u022e\3\2\2\2\u009f\u0230\3\2\2\2\u00a1"+
		"\u0237\3\2\2\2\u00a3\u0241\3\2\2\2\u00a5\u0247\3\2\2\2\u00a7\u024e\3\2"+
		"\2\2\u00a9\u0255\3\2\2\2\u00ab\u0257\3\2\2\2\u00ad\u0266\3\2\2\2\u00af"+
		"\u026c\3\2\2\2\u00b1\u00b2\7r\2\2\u00b2\u00b3\7c\2\2\u00b3\u00b4\7e\2"+
		"\2\u00b4\u00b5\7m\2\2\u00b5\u00b6\7c\2\2\u00b6\u00b7\7i\2\2\u00b7\u00b8"+
		"\7g\2\2\u00b8\4\3\2\2\2\u00b9\u00ba\7=\2\2\u00ba\6\3\2\2\2\u00bb\u00bc"+
		"\7k\2\2\u00bc\u00bd\7o\2\2\u00bd\u00be\7r\2\2\u00be\u00bf\7q\2\2\u00bf"+
		"\u00c0\7t\2\2\u00c0\u00c1\7v\2\2\u00c1\b\3\2\2\2\u00c2\u00c3\7u\2\2\u00c3"+
		"\u00c4\7v\2\2\u00c4\u00c5\7c\2\2\u00c5\u00c6\7v\2\2\u00c6\u00c7\7k\2\2"+
		"\u00c7\u00c8\7e\2\2\u00c8\n\3\2\2\2\u00c9\u00ca\7\60\2\2\u00ca\f\3\2\2"+
		"\2\u00cb\u00cc\7,\2\2\u00cc\16\3\2\2\2\u00cd\u00ce\7e\2\2\u00ce\u00cf"+
		"\7n\2\2\u00cf\u00d0\7c\2\2\u00d0\u00d1\7u\2\2\u00d1\u00d2\7u\2\2\u00d2"+
		"\20\3\2\2\2\u00d3\u00d4\7g\2\2\u00d4\u00d5\7z\2\2\u00d5\u00d6\7v\2\2\u00d6"+
		"\u00d7\7g\2\2\u00d7\u00d8\7p\2\2\u00d8\u00d9\7f\2\2\u00d9\u00da\7u\2\2"+
		"\u00da\22\3\2\2\2\u00db\u00dc\7<\2\2\u00dc\24\3\2\2\2\u00dd\u00de\7>\2"+
		"\2\u00de\26\3\2\2\2\u00df\u00e0\7.\2\2\u00e0\30\3\2\2\2\u00e1\u00e2\7"+
		"@\2\2\u00e2\32\3\2\2\2\u00e3\u00e4\7(\2\2\u00e4\34\3\2\2\2\u00e5\u00e6"+
		"\7}\2\2\u00e6\36\3\2\2\2\u00e7\u00e8\7\177\2\2\u00e8 \3\2\2\2\u00e9\u00ea"+
		"\7h\2\2\u00ea\u00eb\7w\2\2\u00eb\u00ec\7p\2\2\u00ec\"\3\2\2\2\u00ed\u00ee"+
		"\7v\2\2\u00ee\u00ef\7j\2\2\u00ef\u00f0\7t\2\2\u00f0\u00f1\7q\2\2\u00f1"+
		"\u00f2\7y\2\2\u00f2\u00f3\7u\2\2\u00f3$\3\2\2\2\u00f4\u00f5\7x\2\2\u00f5"+
		"\u00f6\7c\2\2\u00f6\u00f7\7t\2\2\u00f7&\3\2\2\2\u00f8\u00f9\7k\2\2\u00f9"+
		"\u00fa\7p\2\2\u00fa\u00fb\7k\2\2\u00fb\u00fc\7v\2\2\u00fc(\3\2\2\2\u00fd"+
		"\u00fe\7?\2\2\u00fe*\3\2\2\2\u00ff\u0100\7]\2\2\u0100,\3\2\2\2\u0101\u0102"+
		"\7_\2\2\u0102.\3\2\2\2\u0103\u0104\7r\2\2\u0104\u0105\7w\2\2\u0105\u0106"+
		"\7d\2\2\u0106\u0107\7n\2\2\u0107\u0108\7k\2\2\u0108\u0109\7e\2\2\u0109"+
		"\60\3\2\2\2\u010a\u010b\7r\2\2\u010b\u010c\7t\2\2\u010c\u010d\7q\2\2\u010d"+
		"\u010e\7v\2\2\u010e\u010f\7g\2\2\u010f\u0110\7e\2\2\u0110\u0111\7v\2\2"+
		"\u0111\u0112\7g\2\2\u0112\u0113\7f\2\2\u0113\62\3\2\2\2\u0114\u0115\7"+
		"r\2\2\u0115\u0116\7t\2\2\u0116\u0117\7k\2\2\u0117\u0118\7x\2\2\u0118\u0119"+
		"\7c\2\2\u0119\u011a\7v\2\2\u011a\u011b\7g\2\2\u011b\64\3\2\2\2\u011c\u011d"+
		"\7c\2\2\u011d\u011e\7d\2\2\u011e\u011f\7u\2\2\u011f\u0120\7v\2\2\u0120"+
		"\u0121\7t\2\2\u0121\u0122\7c\2\2\u0122\u0123\7e\2\2\u0123\u0124\7v\2\2"+
		"\u0124\66\3\2\2\2\u0125\u0126\7h\2\2\u0126\u0127\7k\2\2\u0127\u0128\7"+
		"p\2\2\u0128\u0129\7c\2\2\u0129\u012a\7n\2\2\u012a8\3\2\2\2\u012b\u012c"+
		"\7D\2\2\u012c\u012d\7q\2\2\u012d\u012e\7q\2\2\u012e\u012f\7n\2\2\u012f"+
		":\3\2\2\2\u0130\u0131\7E\2\2\u0131\u0132\7j\2\2\u0132\u0133\7c\2\2\u0133"+
		"\u0134\7t\2\2\u0134<\3\2\2\2\u0135\u0136\7D\2\2\u0136\u0137\7{\2\2\u0137"+
		"\u0138\7v\2\2\u0138\u0139\7g\2\2\u0139>\3\2\2\2\u013a\u013b\7U\2\2\u013b"+
		"\u013c\7j\2\2\u013c\u013d\7q\2\2\u013d\u013e\7t\2\2\u013e\u013f\7v\2\2"+
		"\u013f@\3\2\2\2\u0140\u0141\7K\2\2\u0141\u0142\7p\2\2\u0142\u0143\7v\2"+
		"\2\u0143B\3\2\2\2\u0144\u0145\7N\2\2\u0145\u0146\7q\2\2\u0146\u0147\7"+
		"p\2\2\u0147\u0148\7i\2\2\u0148D\3\2\2\2\u0149\u014a\7H\2\2\u014a\u014b"+
		"\7n\2\2\u014b\u014c\7q\2\2\u014c\u014d\7c\2\2\u014d\u014e\7v\2\2\u014e"+
		"F\3\2\2\2\u014f\u0150\7F\2\2\u0150\u0151\7q\2\2\u0151\u0152\7w\2\2\u0152"+
		"\u0153\7d\2\2\u0153\u0154\7n\2\2\u0154\u0155\7g\2\2\u0155H\3\2\2\2\u0156"+
		"\u0157\7n\2\2\u0157\u0158\7g\2\2\u0158\u0159\7v\2\2\u0159J\3\2\2\2\u015a"+
		"\u015b\7A\2\2\u015bL\3\2\2\2\u015c\u015d\7u\2\2\u015d\u015e\7w\2\2\u015e"+
		"\u015f\7r\2\2\u015f\u0160\7g\2\2\u0160\u0161\7t\2\2\u0161N\3\2\2\2\u0162"+
		"\u0163\7*\2\2\u0163P\3\2\2\2\u0164\u0165\7+\2\2\u0165R\3\2\2\2\u0166\u0167"+
		"\7\60\2\2\u0167\u0168\7\60\2\2\u0168\u0169\7\60\2\2\u0169T\3\2\2\2\u016a"+
		"\u016b\7v\2\2\u016b\u016c\7j\2\2\u016c\u016d\7k\2\2\u016d\u016e\7u\2\2"+
		"\u016eV\3\2\2\2\u016f\u0170\7p\2\2\u0170\u0171\7w\2\2\u0171\u0172\7n\2"+
		"\2\u0172\u0173\7n\2\2\u0173X\3\2\2\2\u0174\u0175\7v\2\2\u0175\u0176\7"+
		"t\2\2\u0176\u0177\7w\2\2\u0177\u0178\7g\2\2\u0178Z\3\2\2\2\u0179\u017a"+
		"\7h\2\2\u017a\u017b\7c\2\2\u017b\u017c\7n\2\2\u017c\u017d\7u\2\2\u017d"+
		"\u017e\7g\2\2\u017e\\\3\2\2\2\u017f\u0180\7k\2\2\u0180\u0181\7h\2\2\u0181"+
		"^\3\2\2\2\u0182\u0183\7g\2\2\u0183\u0184\7n\2\2\u0184\u0185\7u\2\2\u0185"+
		"\u0186\7g\2\2\u0186`\3\2\2\2\u0187\u0188\7h\2\2\u0188\u0189\7q\2\2\u0189"+
		"\u018a\7t\2\2\u018ab\3\2\2\2\u018b\u018c\7y\2\2\u018c\u018d\7j\2\2\u018d"+
		"\u018e\7k\2\2\u018e\u018f\7n\2\2\u018f\u0190\7g\2\2\u0190d\3\2\2\2\u0191"+
		"\u0192\7f\2\2\u0192\u0193\7q\2\2\u0193f\3\2\2\2\u0194\u0195\7y\2\2\u0195"+
		"\u0196\7j\2\2\u0196\u0197\7g\2\2\u0197\u0198\7p\2\2\u0198h\3\2\2\2\u0199"+
		"\u019a\7t\2\2\u019a\u019b\7g\2\2\u019b\u019c\7v\2\2\u019c\u019d\7w\2\2"+
		"\u019d\u019e\7t\2\2\u019e\u019f\7p\2\2\u019fj\3\2\2\2\u01a0\u01a1\7d\2"+
		"\2\u01a1\u01a2\7t\2\2\u01a2\u01a3\7g\2\2\u01a3\u01a4\7c\2\2\u01a4\u01a5"+
		"\7m\2\2\u01a5l\3\2\2\2\u01a6\u01a7\7/\2\2\u01a7\u01a8\7@\2\2\u01a8n\3"+
		"\2\2\2\u01a9\u01aa\7k\2\2\u01aa\u01ab\7p\2\2\u01abp\3\2\2\2\u01ac\u01ad"+
		"\7u\2\2\u01ad\u01ae\7g\2\2\u01ae\u01af\7n\2\2\u01af\u01b0\7h\2\2\u01b0"+
		"r\3\2\2\2\u01b1\u01b2\7p\2\2\u01b2\u01b3\7g\2\2\u01b3\u01b4\7y\2\2\u01b4"+
		"t\3\2\2\2\u01b5\u01b6\7-\2\2\u01b6\u01b7\7-\2\2\u01b7v\3\2\2\2\u01b8\u01b9"+
		"\7/\2\2\u01b9\u01ba\7/\2\2\u01bax\3\2\2\2\u01bb\u01bc\7-\2\2\u01bcz\3"+
		"\2\2\2\u01bd\u01be\7/\2\2\u01be|\3\2\2\2\u01bf\u01c0\7\u0080\2\2\u01c0"+
		"~\3\2\2\2\u01c1\u01c2\7#\2\2\u01c2\u0080\3\2\2\2\u01c3\u01c4\7\61\2\2"+
		"\u01c4\u0082\3\2\2\2\u01c5\u01c6\7\'\2\2\u01c6\u0084\3\2\2\2\u01c7\u01c8"+
		"\7k\2\2\u01c8\u01c9\7p\2\2\u01c9\u01ca\7u\2\2\u01ca\u01cb\7v\2\2\u01cb"+
		"\u01cc\7c\2\2\u01cc\u01cd\7p\2\2\u01cd\u01ce\7e\2\2\u01ce\u01cf\7g\2\2"+
		"\u01cf\u01d0\7q\2\2\u01d0\u01d1\7h\2\2\u01d1\u0086\3\2\2\2\u01d2\u01d3"+
		"\7?\2\2\u01d3\u01d4\7?\2\2\u01d4\u0088\3\2\2\2\u01d5\u01d6\7#\2\2\u01d6"+
		"\u01d7\7?\2\2\u01d7\u008a\3\2\2\2\u01d8\u01d9\7`\2\2\u01d9\u008c\3\2\2"+
		"\2\u01da\u01db\7~\2\2\u01db\u008e\3\2\2\2\u01dc\u01dd\7(\2\2\u01dd\u01de"+
		"\7(\2\2\u01de\u0090\3\2\2\2\u01df\u01e0\7~\2\2\u01e0\u01e1\7~\2\2\u01e1"+
		"\u0092\3\2\2\2\u01e2\u01e3\7x\2\2\u01e3\u01e4\7q\2\2\u01e4\u01e5\7k\2"+
		"\2\u01e5\u01e6\7f\2\2\u01e6\u0094\3\2\2\2\u01e7\u01f0\7\62\2\2\u01e8\u01ec"+
		"\4\63;\2\u01e9\u01eb\4\62;\2\u01ea\u01e9\3\2\2\2\u01eb\u01ee\3\2\2\2\u01ec"+
		"\u01ea\3\2\2\2\u01ec\u01ed\3\2\2\2\u01ed\u01f0\3\2\2\2\u01ee\u01ec\3\2"+
		"\2\2\u01ef\u01e7\3\2\2\2\u01ef\u01e8\3\2\2\2\u01f0\u01f2\3\2\2\2\u01f1"+
		"\u01f3\5\u0097L\2\u01f2\u01f1\3\2\2\2\u01f2\u01f3\3\2\2\2\u01f3\u0096"+
		"\3\2\2\2\u01f4\u01f5\t\2\2\2\u01f5\u0098\3\2\2\2\u01f6\u01f8\4\62;\2\u01f7"+
		"\u01f6\3\2\2\2\u01f8\u01f9\3\2\2\2\u01f9\u01f7\3\2\2\2\u01f9\u01fa\3\2"+
		"\2\2\u01fa\u01fb\3\2\2\2\u01fb\u01ff\7\60\2\2\u01fc\u01fe\4\62;\2\u01fd"+
		"\u01fc\3\2\2\2\u01fe\u0201\3\2\2\2\u01ff\u01fd\3\2\2\2\u01ff\u0200\3\2"+
		"\2\2\u0200\u0203\3\2\2\2\u0201\u01ff\3\2\2\2\u0202\u0204\5\u009bN\2\u0203"+
		"\u0202\3\2\2\2\u0203\u0204\3\2\2\2\u0204\u0206\3\2\2\2\u0205\u0207\5\u009d"+
		"O\2\u0206\u0205\3\2\2\2\u0206\u0207\3\2\2\2\u0207\u0224\3\2\2\2\u0208"+
		"\u020a\7\60\2\2\u0209\u020b\4\62;\2\u020a\u0209\3\2\2\2\u020b\u020c\3"+
		"\2\2\2\u020c\u020a\3\2\2\2\u020c\u020d\3\2\2\2\u020d\u020f\3\2\2\2\u020e"+
		"\u0210\5\u009bN\2\u020f\u020e\3\2\2\2\u020f\u0210\3\2\2\2\u0210\u0212"+
		"\3\2\2\2\u0211\u0213\5\u009dO\2\u0212\u0211\3\2\2\2\u0212\u0213\3\2\2"+
		"\2\u0213\u0224\3\2\2\2\u0214\u0216\4\62;\2\u0215\u0214\3\2\2\2\u0216\u0217"+
		"\3\2\2\2\u0217\u0215\3\2\2\2\u0217\u0218\3\2\2\2\u0218\u0219\3\2\2\2\u0219"+
		"\u021b\5\u009bN\2\u021a\u021c\5\u009dO\2\u021b\u021a\3\2\2\2\u021b\u021c"+
		"\3\2\2\2\u021c\u0224\3\2\2\2\u021d\u021f\4\62;\2\u021e\u021d\3\2\2\2\u021f"+
		"\u0220\3\2\2\2\u0220\u021e\3\2\2\2\u0220\u0221\3\2\2\2\u0221\u0222\3\2"+
		"\2\2\u0222\u0224\5\u009dO\2\u0223\u01f7\3\2\2\2\u0223\u0208\3\2\2\2\u0223"+
		"\u0215\3\2\2\2\u0223\u021e\3\2\2\2\u0224\u009a\3\2\2\2\u0225\u0227\t\3"+
		"\2\2\u0226\u0228\t\4\2\2\u0227\u0226\3\2\2\2\u0227\u0228\3\2\2\2\u0228"+
		"\u022a\3\2\2\2\u0229\u022b\4\62;\2\u022a\u0229\3\2\2\2\u022b\u022c\3\2"+
		"\2\2\u022c\u022a\3\2\2\2\u022c\u022d\3\2\2\2\u022d\u009c\3\2\2\2\u022e"+
		"\u022f\t\5\2\2\u022f\u009e\3\2\2\2\u0230\u0233\7)\2\2\u0231\u0234\5\u00a3"+
		"R\2\u0232\u0234\n\6\2\2\u0233\u0231\3\2\2\2\u0233\u0232\3\2\2\2\u0234"+
		"\u0235\3\2\2\2\u0235\u0236\7)\2\2\u0236\u00a0\3\2\2\2\u0237\u023c\7$\2"+
		"\2\u0238\u023b\5\u00a3R\2\u0239\u023b\n\7\2\2\u023a\u0238\3\2\2\2\u023a"+
		"\u0239\3\2\2\2\u023b\u023e\3\2\2\2\u023c\u023a\3\2\2\2\u023c\u023d\3\2"+
		"\2\2\u023d\u023f\3\2\2\2\u023e\u023c\3\2\2\2\u023f\u0240\7$\2\2\u0240"+
		"\u00a2\3\2\2\2\u0241\u0245\7^\2\2\u0242\u0246\t\b\2\2\u0244\u0246\t\6"+
		"\2\2\u0245\u0242\3\2\2\2\u0245\u0243\3\2\2\2\u0245\u0244\3\2\2\2\u0246"+
		"\u00a4\3\2\2\2\u0247\u0248\7g\2\2\u0248\u0249\7p\2\2\u0249\u024a\7w\2"+
		"\2\u024a\u024b\7o\2\2\u024b\u024c\3\2\2\2\u024c\u024d\bS\2\2\u024d\u00a6"+
		"\3\2\2\2\u024e\u0252\5\u00a9U\2\u024f\u0251\5\u00a9U\2\u0250\u024f\3\2"+
		"\2\2\u0251\u0254\3\2\2\2\u0252\u0250\3\2\2\2\u0252\u0253\3\2\2\2\u0253"+
		"\u00a8\3\2\2\2\u0254\u0252\3\2\2\2\u0255\u0256\t\t\2\2\u0256\u00aa\3\2"+
		"\2\2\u0257\u0258\7\61\2\2\u0258\u0259\7,\2\2\u0259\u025d\3\2\2\2\u025a"+
		"\u025c\13\2\2\2\u025b\u025a\3\2\2\2\u025c\u025f\3\2\2\2\u025d\u025e\3"+
		"\2\2\2\u025d\u025b\3\2\2\2\u025e\u0260\3\2\2\2\u025f\u025d\3\2\2\2\u0260"+
		"\u0261\7,\2\2\u0261\u0262\7\61\2\2\u0262\u0263\3\2\2\2\u0263\u0264\bV"+
		"\3\2\u0264\u00ac\3\2\2\2\u0265\u0267\t\n\2\2\u0266\u0265\3\2\2\2\u0267"+
		"\u0268\3\2\2\2\u0268\u0266\3\2\2\2\u0268\u0269\3\2\2\2\u0269\u026a\3\2"+
		"\2\2\u026a\u026b\bW\3\2\u026b\u00ae\3\2\2\2\u026c\u026d\7\61\2\2\u026d"+
		"\u026e\7\61\2\2\u026e\u0272\3\2\2\2\u026f\u0271\n\13\2\2\u0270\u026f\3"+
		"\2\2\2\u0271\u0274\3\2\2\2\u0272\u0270\3\2\2\2\u0272\u0273\3\2\2\2\u0273"+
		"\u0276\3\2\2\2\u0274\u0272\3\2\2\2\u0275\u0277\7\17\2\2\u0276\u0275\3"+
		"\2\2\2\u0276\u0277\3\2\2\2\u0277\u0278\3\2\2\2\u0278\u0279\7\f\2\2\u0279"+
		"\u027a\3\2\2\2\u027a\u027b\bX\3\2\u027b\u00b0\3\2\2\2\34\2\u01ec\u01ef"+
		"\u01f2\u01f9\u01ff\u0203\u0206\u020c\u020f\u0212\u0217\u021b\u0220\u0223"+
		"\u0227\u022c\u0233\u023a\u023c\u0245\u0252\u025d\u0268\u0272\u0276\4\3"+
		"S\2\2\3\2";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}